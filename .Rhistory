c(-1,1)*((1.5^2*(8)+1.8^2*8)/16*(1/9+1/9))^0.5*qt(0.95,16)-4
1100+c(-1,1)*qt(0.975,8)*30/3
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
coef(fit)
summary(fit)
data(mtcars)
fit2<-lm(mtcars$mpg~mtcars$mpg)
fit2<-lm(mtcars$mpg~mtcars$wt)
summary(ffit)
summary(fit2)
predict(fit2,mean(mtcars$wt))
mean(mtcars$wt)
predict(fit2,3.21725
)
?predict
summary(mtcars$wt)
summary(mtcars)
mtcars
numrows(mtcars)
nrows(mtcars)
nrow(mtcars)
predict(fit2,news=3.2)
predict(fit2,newdata=mean(mtcars$wt))
predict(fit2,newdata=mean(mtcars$wt),interval = ("prediction"))
predict(fit2,newdata=(x=mean(mtcars$wt)),interval = ("prediction"))
newx <- data.frame(x = mean(mtcars$wt))
predict(fit2,newdata=newx,interval = ("prediction"))
predict(fit2,newdata=newx,interval = ("prediction"))
rep(mean(mtcars$wt),32)
news <- rep(mean(mtcars$wt),32)
predict(fit2,newdata=newx,interval = ("prediction"))
predict(fit2,newdata = newx,interval = ("prediction"))
seq(mean(mtcars$wt),mean(mtcars$wt),length =32)
x=seq(mean(mtcars$wt),mean(mtcars$wt),length =32)
x
p1 <- data.frame (x=seq(mean(mtcars$wt),mean(mtcars$wt),length =32))
p1
predict(fit2,newdata=p1)
mtcars$wt
new.wt<- data.frame(wt=mean(mtcars$wt))
predict(fit2,newdata = new.wt)
fit2<-lm(mtcars$mpg~mtcars$wt)
predict(fit2,newdata = new.wt)
fit2<-lm(mtcars$mpg~mtcars$wt)
fit2
new.wt<- data.frame(wt=mean(mtcars$wt))
new.wt
fit2<-lm(mtcars$mpg~x=mtcars$wt)
y=mtcars$mpg
x=mtcars$wt
fit2 <- lm(y~x)
predict(fit2,newdata = new.wt)
new.wt<- data.frame(x=mean(mtcars$wt))
predict(fit2,newdata = new.wt)
predict(fit2,newdata = new.wt,interval =("prediction"))
predict(fit2,newdata = new.wt,se.fit=T
)
predict(fit2,newdata = new.wt,interval =("confidence"))
?mtcars
predict(fit2,newdata = 3,interval =("prediction"))
new.wt<- data.frame(x=3
)
predict(fit2,newdata = new.wt,interval =("prediction"))
x2<-mtcars$wt/2
fit3<-lm(y~x2)
summary(fit3)
c(-1,1)*qnorm(0.975)*1.118+-10.689
c(-1,1)*qt(0.975,30)*1.118+-10.689
y <- mtcars$mpg
x1 <- mtcars$wt
x2 <- seq(1,1,length=32)
fit1<-lm(y~x1)
fit2<-lm(y~x2)
fit1
summary(fit1)
summary(fit2)
resid(fit1)/resid(fit2)
sum(resid(fit1)^2)/sum(resid(fit2)^2)
sd(resid(ffit))
sd(resid(fit1))
library(swirl)
library("swirl")
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?factor
?transform
airquality <- transform(airquality,Month = factor(Month))
airquality
with(airquality,Month)
sapply(airquality,class)
xyplot(Ozone~Wind,data = airquality)
library(grid)
xyplot(Ozone~Wind,data = airquality)
library(lattice)
xyplot(Ozone~Wind,data = airquality)
fx <- seq(1,100,length=100)
fx <- rep(c(0,1,3,2),20)
t(fx)
fx
factor(fx)
fx<-factor(fx)
fx<-factor(fx, labels = c("USA","China","Russia","Japan"))
fx
install.packages("ggplot2")
?str
?bwbwplot
?bwplot
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?qplot
swirl(())
swirl()
head(airquality)
xyplot(Ozone~Wind | data=airquality)
xyplot(Ozone~Wind , data=airquality)
xyplot(Ozone~Wind , data=airquality, col="red",pch=8)
xyplot(Ozone~Wind , data=airquality, col="red",pch=8,main='Big Apple data")
xyplot(Ozone~Wind , data=airquality, col="red",pch=8,main="Big Apple data")
xyplot(Ozone~Wind , data=airquality, col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month) data=airquality,layout=c(5,1))
xyplot(Ozone~Wind | as.factor(Month), data=airquality,layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.r")
myedit("plot1.R")
source("plot1.R",local = TRUE)
source("plot1.R",local = TRUE)
skip()
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLables.R")
myedit("myLabels.R")
source(pathtofile("myLables.R"),local = TRUE)
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data=diamonds,strip = FALSE, pch =20, xlab=myxlab,ylab=myylab,main=mymain )
xyplot(price~carat | color*cut, data=diamonds, pch =20, xlab=myxlab,ylab=myylab,main=mymain )
library("swirl")
swirl()
library("swirl")
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2.)
qplot(dspl,hwy, data=mpg,geo=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy, data=mpg,geo=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy, data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
ggplot(mpg,aes(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy))
g
summary(g)
g+geom_point()
(g + geom_point())+geom_smooth()
g + geom_point()+geom_smooth()
g + geom_point()+geom_smooth("lm")
g + geom_point()+geom_smooth(method="lm")
g + geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g + geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g + geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(color=drv,size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=4,alpha=1/2)
g + geom_point(aes(color=drv),size=4,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color=drv),size=2,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")+geom_smooth(size=4,linetype=3,method="lm")
g + geom_point(aes(color=drv),size=2,alpha=1/2)+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(dataset,aes(x=displ,y=hwy,color=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=T)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,shape=cut,color=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=c(5,10))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints=quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
Type cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
swirl()
library(swirl)
install_course_github("https://github.com/swirldev/swirl_courses/tree/master/Getting_and_Cleaning_Data")
install_course_github("http://github.com/swirldev/swirl_courses/tree/master/Getting_and_Cleaning_Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Regression Models")
install_from_swirl("Statistical Inference")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package == "swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500&r_os=="linux-gnu")
filter(cran,size>100500 & r_os=="linux-gnu")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
mutate(cran3,size_gb=size_mb / 2^20)
cran3
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(my_df)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
submit()
submit()
swirl()
submit()
rm(list=ls())
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarise(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(counts))
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
uantile(pack_sum$unique, probs=0.99)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum,unique > 465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id,country,package,size) %>%
print
submit()
submit()
submit()
submit()
submit()
rm(list=ls())
library(dplyr)
act_labels<-read.table("activity_labels.txt")
features<-read.table("features.txt")
test_data<-read.table("X_test.txt")
train_data<-read.table("X_train.txt")
test_subject<-read.table("subject_test.txt" )
train_subject<-read.table("subject_train.txt")
test_activity<-read.table("y_test.txt" )
train_activity<-read.table("y_train.txt")
raw_alldata<-rbind(test_data,train_data)
names(raw_alldata)<-features[,2] #adhere feature list to colname
setwd("C:/Users/Administrator/Desktop/Coursera/DS_Toolbox/DS_4_G&CData/Project")
rm(list=ls())
library(dplyr)
act_labels<-read.table("activity_labels.txt")
features<-read.table("features.txt")
test_data<-read.table("X_test.txt")
train_data<-read.table("X_train.txt")
test_subject<-read.table("subject_test.txt" )
train_subject<-read.table("subject_train.txt")
test_activity<-read.table("y_test.txt" )
train_activity<-read.table("y_train.txt")
raw_alldata<-rbind(test_data,train_data)
names(raw_alldata)<-features[,2] #adhere feature list to colname
?grep
grep("mean\\(\\)",features$V2)
grep("mean\\(\\)",features$V2,value = T)
mean_features<-grep("mean\\(\\)",features$V2,value = T)
mean_features<-grep("mean\\(\\)",features$V2)
my_data<- raw_alldata[,mean_features]
rm(list=c("test_data","train_data"))#remove the raw data to save some memmory
rm(list=c("raw_alldata"))#remove the raw data to save some memmory
mydata$activity_id<-rbind(test_activity,train_activity)
my_data$activity_id<-rbind(test_activity,train_activity)
my_data$subject_id<-rbind(test_subject,train_subject)
View(act_labels)
names(act_labels)<-c("activity_id","activity")
head(my_data)
my_data$activity_id<-rbind(test_activity,train_activity)
View(my_data)
my_data$subject_id<-rbind(test_subject$V1,train_subject$V1)
my_data$activity_id<-rbind(test_activity$V1,train_activity$V1)
activity_id<-rbind(test_activity,train_activity)
subject_id<-rbind(test_subject,train_subject)
my_data$activity_id<-activity_id$V1
my_data$subject_id<-subject_id$V1
View(my_data)
View(act_labels)
new_my_data<-merge(my_data,act_labels,by=activity_id)
new_my_data<-merge(my_data,act_labels,by="activity_id")
table(new_my_data$activity_id)
table(new_my_data$activity)
sapply(new_my_data,class)
rm(list=ls())
library(dplyr)
#load files from the master
act_labels<-read.table("activity_labels.txt")
features<-read.table("features.txt")
test_data<-read.table("X_test.txt")
train_data<-read.table("X_train.txt")
test_subject<-read.table("subject_test.txt" )
train_subject<-read.table("subject_train.txt")
test_activity<-read.table("y_test.txt" )
train_activity<-read.table("y_train.txt")
raw_alldata<-rbind(test_data,train_data)
names(raw_alldata)<-features[,2] #adhere feature list to colname
rm(list=c("test_data","train_data"))#remove the raw data to save some memmory
mean_features<-grep(c("mean\\(\\)","std\\(\\)"),features$V2)
?grep
mean_features<-grep(c("mean\\(\\)\|std\\(\\)"),features$V2)
mean_features<-grep("mean\\(\\)\|std\\(\\)",features$V2)
mean_features<-grep("mean\\(\\)"\|"std\\(\\)",features$V2)
mean_features<-grep("mean\\(\\)|std\\(\\)",features$V2)
my_data<- raw_alldata[,mean_features]
rm(list=c("raw_alldata"))#remove the raw data to save some memmory
#add variable to identify activity and subject
activity_id<-rbind(test_activity,train_activity)
subject_id<-rbind(test_subject,train_subject)
my_data$activity_id<-activity_id$V1
my_data$subject_id<-subject_id$V1
#clean up the act_labels
names(act_labels)<-c("activity_id","activity")
#merge act_label with my_data
new_my_data<-merge(my_data,act_labels,by="activity_id")
rm(list=c("act_labels","activity_id","subject_id"))#remove the raw data to save some memmory
rm(list=c("test_subject","train_subject","my_data"))#remove the raw data to save some memmory
?aggregate
?group_by
group_by(new_my_data,subject_id,activity)
mydata_grouped<-group_by(new_my_data,subject_id,activity)
summarize(mydata_grouped,mean)
?summarize
View(new_my_data)
summarize(mydata_grouped,activity_id,mean)
summarize(mydata_grouped,mean=mean())
summarize(mydata_grouped,m=mean(subject_id))
View(summarize(mydata_grouped,m=mean(subject_id)))
View(summarize_each(mydata_grouped,mean))
View(summarize_each(mydata_grouped,funs(mean)))
mydata_2<-summarize_each(mydata_grouped,funs(mean))
mydata_2<-arrange(mydata_2,subject_id,activity)
View(mydata_2)
mydata_2<-arrange(mydata_2,subject_id,activity_id)
View(mydata_2)
rm(list=ls())
library(dplyr)
#load files from the master
act_labels<-read.table("./Samsung_data/activity_labels.txt")
features<-read.table("./Samsung_data/features.txt")
test_data<-read.table("./Samsung_data/test/X_test.txt")
train_data<-read.table("./Samsung_data/train/X_train.txt")
test_subject<-read.table("./Samsung_data/test/subject_test.txt" )
train_subject<-read.table("./Samsung_data/train/subject_train.txt")
test_activity<-read.table("./Samsung_data/test/y_test.txt" )
train_activity<-read.table("./Samsung_data/train/y_train.txt")
raw_alldata<-rbind(test_data,train_data)
names(raw_alldata)<-features[,2] #adhere feature list to colname
rm(list=c("test_data","train_data"))#remove the raw data to save some memmory
mean_features<-grep("mean\\(\\)|std\\(\\)",features$V2)
my_data<- raw_alldata[,mean_features]
rm(list=c("raw_alldata"))#remove the raw data to save some memmory
#add variable to identify activity and subject
activity_id<-rbind(test_activity,train_activity)
subject_id<-rbind(test_subject,train_subject)
my_data$activity_id<-activity_id$V1
my_data$subject_id<-subject_id$V1
#clean up the act_labels
names(act_labels)<-c("activity_id","activity")
#merge act_label with my_data
new_my_data<-merge(my_data,act_labels,by="activity_id")
rm(list=c("act_labels","activity_id","subject_id"))#remove the raw data to save some memmory
rm(list=c("test_subject","train_subject","my_data"))#remove the raw data to save some memmory
##
mydata_grouped<-group_by(new_my_data,subject,activity)
mydata_2<-summarize_each(mydata_grouped,funs(mean))
mydata_2<-arrange(mydata_2,subject_id,activity_id)
mydata_grouped<-group_by(new_my_data,subject_id,activity)
mydata_2<-summarize_each(mydata_grouped,funs(mean))
mydata_2<-arrange(mydata_2,subject_id,activity_id)
View(mydata_2)
write.table(mydata_2,file="clean_data.txt",row.names = FALSE) # save table
?gsub
cvector<-names(new_my_data)
gsub("t",cvector)
gsub("t",x=cvector)
gsub("t",cvector)
gsub("time_","^t",cvector)
gsub("time_","~t",cvector)
gsub("time_","t",cvector)
gsub("time_","^t?",cvector)
gsub("time_","activity",cvector)
gsub("t","time",cvector)
gsub("^t","time",cvector)
View(mydata_2)
View(new_my_data)
View(mydata_2)
